<?xml version="1.0" encoding="utf-8" ?>
<controls:ContentPageWithPopup 
             xmlns:controls="clr-namespace:TychoClient.Controls"  
             xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="TychoClient.Views.ReadCardPage"
             xmlns:vm="clr-namespace:TychoClient.ViewModels"
             x:Name="ReadCardPageName"
             Style="{StaticResource Style.ContentPage.Default}"
             CurrentPopup="{Binding CurrentPopup}"
             Title="{Binding Title}">
    
    <ContentPage.BindingContext>
        <vm:ReadCardViewModel />
    </ContentPage.BindingContext>

    <ContentPage.Resources>
        <ResourceDictionary>
            <!--Page Level Resources: Compatible with Xamarin Live Player -->
            <Color x:Key="Primary">#2196F3</Color>
            <Color x:Key="Accent">#96d1ff</Color>
            <Color x:Key="LightTextColor">#999999</Color>

            <Thickness x:Key="DistanceLabel" Bottom="-10" Top="10">
            </Thickness>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <!--#region admin header-->
        <Button Text="Write to chip" Command="{Binding WriteToTagCommand}" IsEnabled="{Binding ChipUid, Converter={StaticResource InverseIsEmptyOrNullConverter}}" Margin="0">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.Triggers>
                        <DataTrigger TargetType="{x:Type Button}" Binding="{Binding IsWriting}" Value="True">
                            <Setter Property="BackgroundColor" Value="DarkGray"/>
                            <Setter Property="Text" Value="Waiting for tag..."/>
                        </DataTrigger>
                        <MultiTrigger TargetType="{x:Type Button}">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding IsWriting}" Value="False"/>
                                <BindingCondition Binding="{Binding Readonly}" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible" Value="False"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button Text="Clear" BorderColor="Red" Command="{Binding ClearFormCommand}" Grid.Column="1" Margin="0">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.Triggers>
                        <MultiTrigger TargetType="{x:Type Button}">
                            <MultiTrigger.Conditions>
                                <BindingCondition Binding="{Binding IsWriting}" Value="False"/>
                                <BindingCondition Binding="{Binding Readonly}" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsVisible" Value="False"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
            <!--#endregion admin header-->
        
        <ScrollView Grid.Row="1" Grid.ColumnSpan="2">
            <StackLayout Orientation="Vertical" Padding="16,16,16,40" Spacing="10">

                <!--#region singular entries-->
                <Label Text="Name"  Margin="{StaticResource DistanceLabel}"/>
                <Entry Text="{Binding CustomerName}" InputTransparent="{Binding Readonly}" MaxLength="20"/>

                <Label Text="Current balance"  Margin="{StaticResource DistanceLabel}"/>
                <Entry Text="{Binding CurrentBalance}" InputTransparent="True"/>

                <Label Text="Available Drinks"  Margin="{StaticResource DistanceLabel}"/>
                <Entry Text="{Binding AvailableDrinks}" InputTransparent="{Binding Readonly}" Keyboard="Numeric"/>

                <Label Text="Spent Drinks"  Margin="{StaticResource DistanceLabel}"/>
                <Entry Text="{Binding SpentAlcoholTokens}" InputTransparent="{Binding Readonly}" Keyboard="Numeric"/>

                <Label Text="Checksum"  Margin="{StaticResource DistanceLabel}"/>
                <Label Text="{Binding Checksum}">
                    <Label.Style>
                        <Style TargetType="{x:Type Label}">
                            <Style.Triggers>
                                <DataTrigger TargetType="{x:Type Label}" Binding="{Binding ChecksumMatches}" Value="True">
                                    <Setter Property="BackgroundColor" Value="Green"/>
                                </DataTrigger>
                                <DataTrigger TargetType="{x:Type Label}" Binding="{Binding ChecksumMatches}" Value="False">
                                    <Setter Property="BackgroundColor" Value="Red"/>
                                </DataTrigger>
                                <DataTrigger TargetType="{x:Type Label}" Binding="{Binding ChecksumMatches}" Value="{x:Null}">
                                    <Setter Property="BackgroundColor" Value="Transparent"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
                <Label Text="Chip UID"  Margin="{StaticResource DistanceLabel}"/>
                <Label Text="{Binding ChipUid}"/>
                <Label Text="Transaction ID"  Margin="{StaticResource DistanceLabel}"/>
                <Entry Text="{Binding TransactionId}" InputTransparent="{Binding Readonly}" Keyboard="Numeric"/>

                <Label Text="Collapsed history"  Margin="{StaticResource DistanceLabel}" IsVisible="{Binding Readonly, Converter={StaticResource InvertBoolConverter}}"/>
                <Entry Text="{Binding CollapsedHistory}" InputTransparent="{Binding Readonly}" IsVisible="{Binding Readonly, Converter={StaticResource InvertBoolConverter}}" Keyboard="Numeric"/>
                <!--#endregion singular entries-->
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Text="Transactions"  Margin="{StaticResource DistanceLabel}"/>
                    <Button Grid.Column="1" Text="Remove selected" Command="{Binding DeleteTransactionCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Style.Triggers>
                                    <DataTrigger TargetType="{x:Type Button}" Binding="{Binding SelectedTransaction, Converter={StaticResource IsEmptyOrNullConverter}}" Value="True">
                                        <Setter Property="IsVisible" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Grid.Column="2" Text="+" FontSize="Large" IsVisible="{Binding Readonly, Converter={StaticResource InvertBoolConverter}}" Command="{Binding AddTransactionCommand}"/>
                </Grid>
                <ListView ItemsSource="{Binding Transactions}" SelectedItem="{Binding SelectedTransaction}" SelectionMode="None" x:Name="transactionsList">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <ViewCell>
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Entry Text="{Binding Sum}" InputTransparent="{Binding Path=BindingContext.Readonly, Source={x:Reference Name=ReadCardPageName}}" Keyboard="Numeric"/>
                                    <Label Text="Tycho Dollars from" Grid.Column="1" VerticalTextAlignment="Center">
                                        <Label.Style>
                                            <Style TargetType="{x:Type Label}">
                                                <Style.Triggers>
                                                    <DataTrigger TargetType="{x:Type Label}" Binding="{Binding Sum, Converter={StaticResource IsNegativeConverter}}" Value="True">
                                                        <Setter Property="Text" Value="Tycho Dollars to"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Label.Style>
                                    </Label>
                                    <Entry Text="{Binding Partner}" Grid.Column="2" InputTransparent="{Binding Path=BindingContext.Readonly, Source={x:Reference Name=ReadCardPageName}}" Keyboard="Numeric"/>
                                </Grid>
                            </ViewCell>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.Style>
                        <Style TargetType="{x:Type ListView}">
                            <Style.Triggers>
                                <DataTrigger TargetType="{x:Type ListView}" Binding="{Binding Readonly}" Value="False">
                                    <Setter Property="SelectionMode" Value="Single"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ListView.Style>
                </ListView>


            </StackLayout>
        </ScrollView>
    </Grid>
</controls:ContentPageWithPopup>