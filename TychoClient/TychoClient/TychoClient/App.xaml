<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:converters="clr-namespace:TychoClient.Converters"
             xmlns:controls="clr-namespace:TychoClient.Controls"  
             xmlns:Effects="clr-namespace:TychoClient.Effects"  
             xmlns:attached="clr-namespace:TychoClient.AttachedProperties"  
             x:Class="TychoClient.App">
    <Application.Resources>
        <ResourceDictionary>
            <converters:IsEmptyOrNullConverter x:Key="IsEmptyOrNullConverter"/>
            <converters:IsEmptyOrNullConverter x:Key="InverseIsEmptyOrNullConverter" Invert="True"/>
            <converters:ByteToIntConverter x:Key="ByteToIntConverter"/>
            <converters:InvertBoolConverter x:Key="InvertBoolConverter"/>
            <converters:IsNegativeConverter x:Key="IsNegativeConverter"/>


            <!--Global Styles-->
            <!--<Color x:Key="NavigationPrimary">Orange</Color>-->

            <Color x:Key="Color.ButtonPressed">#332b12</Color>


            <Style TargetType="{x:Type Label}">
                <Setter Property="TextColor" Value="LightGoldenrodYellow"/>
                <Setter Property="FontFamily" Value="Play-Regular.ttf#Play"/>
                <Setter Property="attached:Attached.HasShadow" Value="True"/>
            </Style>

            <Style TargetType="{x:Type Entry}">
                <Setter Property="TextColor" Value="LightGoldenrodYellow"/>
                <Setter Property="FontFamily" Value="Play-Regular.ttf#Play"/>
                <Setter Property="attached:Attached.HasShadow" Value="True"/>
                <Setter Property="PlaceholderColor" Value="DarkGoldenrod"/>
            </Style>



            <Style TargetType="{x:Type Button}" x:Key="Style.Button.Implicit">
                <Setter Property="FontFamily" Value="Play-Regular.ttf#Play"/>
                <!--<Setter Property="attached:Attached.HasShadow" Value="True"/>-->
                <Setter Property="CornerRadius" Value="15"/>
                <Setter Property="BorderWidth" Value="2"/>
                <Setter Property="BorderColor" Value="Orange"/>
                <Setter Property="TextColor" Value="LightGoldenrodYellow"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList x:Name="CommonStates">
                        <VisualStateGroup >
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="Button.BackgroundColor" Value="Black" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <VisualState.Setters>
                                    <Setter Property="Button.BackgroundColor" Value="{StaticResource Color.ButtonPressed}" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Style.Button.Implicit}"/>

            <Style TargetType="{x:Type controls:ContentPageWithPopup}" x:Key="Style.ContentPage.Default">
                <Setter Property="BackgroundColor" Value="Black"/>
                <Setter Property="NavigationPage.HasNavigationBar" Value="False"/>
                <Setter Property="CurrentPopup" Value="{Binding CurrentPopup}"/>
                <Setter Property="ControlTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid BackgroundColor="Black"
                        ColumnSpacing="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="50" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>


                                <Button Text="&#x2630;" FontSize="30" TextColor="Orange"  BorderWidth="0" Margin="0,-5,0,0"
                                        attached:Attached.OpensMenu="True" />
                                <Label Grid.Column="1" Text="{TemplateBinding Title}" TextColor="Orange" Margin="20,0,0,0" HorizontalTextAlignment="Start" VerticalTextAlignment="Center" FontSize="Large" />

                                <ContentPresenter VerticalOptions="FillAndExpand"
                        HorizontalOptions="FillAndExpand" BackgroundColor="{TemplateBinding BackgroundColor}"
                        Grid.Column="0" Grid.ColumnSpan="2"
                        Grid.Row="1"/>


                                <!--#region Ad popup-->
                                <Grid Grid.ColumnSpan="2" Grid.RowSpan="2"  BackgroundColor="#90000000" BindingContext="{TemplateBinding CurrentPopup}" IsVisible="{Binding IsVisible}">
                                    <Grid Margin="30" BackgroundColor="#90000000">
                                        <Image Source="{Binding Image}"/>
                                    </Grid>
                                    <Button Text="X" Command="{Binding CloseCommand}" InputTransparent="{Binding CanClose, Converter={StaticResource InvertBoolConverter}}" 
                                                TextColor="Red" FontSize="Large" Padding="0" Margin="5" BackgroundColor="Black" BorderColor="Red" HorizontalOptions="End" VerticalOptions="Start"/>
                                </Grid>
                                <!--#endregion Ad popup-->

                            </Grid>


                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>